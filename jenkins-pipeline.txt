pipeline {
      environment {

          rootProjectDirectory = "./";

          buildDirectory = "${rootProjectDirectory}/Build-Server";

          terraformDirectory = "${rootProjectDirectory}/terraform";

          dockerImage = "http-py-server" // docker image name

    }
    agent any

    stages {
        stage('Build') {

            steps{

                // Set the directory for terraform to use for running
                dir("${terraformDirectory}") {
                echo 'Preparing the Infrastructure ....'
                sh "terraform init"
                sh "terraform plan -out=plan1"
                }
            }

        }
        stage('Test') {
            steps {

              echo 'Testing....'

            // Testing components have been added
            // these test commands must use sudo or run as root 

            // Starting the container for testing
            // sh "docker run -d -p 8081:80 ${dockerImage}"

            // A simple test using inline python to show how a test can be done
            // output can be handled later and the pipeline can be haulted if the tests fail
            // sh "python \"${buildDirectory}/run-server-test.py\""

            // stopping the container after testing
            // sh "docker stop $(docker ps -a -q)"
            // sh "docker rm $(docker ps -a -q)"

            }
        }
        stage('Deploy') {
            steps {

                echo 'Deploying....'

                // Set the directory for terraform
                dir("${terraformDirectory}") {
                echo 'Creating Terraform Infastructure ....'
                sh "terraform apply --auto-approve"
                }

                // Need to push docker image to kubernetes cluster


            }
        }
    }
}
